package matthew.ui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import matthew.jaxb.types.EntitiesType;
import matthew.jaxb.types.EntityType;
import org.apache.commons.lang.StringUtils;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class CreateNewEntity {
    private JPanel createEntityPanel;
    private JTextField entityNameTextField;
    private JButton createEntityButton;
    private JButton cancelButton;
    private JTextArea errorTextArea;

    private final JFrame frame;
    private final EntitiesType entities;
    private final EntityType entity = new EntityType();

    public CreateNewEntity(final JFrame frame, final EntitiesType entities) {
        this.frame = frame;
        this.entities = entities;


        createEntityButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);

                errorTextArea.setText("");

                if (createNewEntity()) {
                    new EntityOverview(frame, entities, entity).loadPanel();
                }
            }
        });
        cancelButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
                new ProjectOverview(frame, entities).loadPanel();
            }
        });
    }


    public void LoadPanel() {
        frame.setContentPane(createEntityPanel);
        frame.revalidate();

        errorTextArea.setEnabled(false);
    }


    private boolean createNewEntity() {
        final String entityName = entityNameTextField.getText().replace(" ", "");


        if (!StringUtils.isAlphanumeric(entityName)) {
            errorTextArea.setText("Entity name must be fully alphanumeric!");
            return false;
        } else {
            entity.setName(entityName);
            entities.getEntity().add(entity);
            return true;
        }
    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createEntityPanel = new JPanel();
        createEntityPanel.setLayout(new GridLayoutManager(5, 4, new Insets(5, 5, 5, 5), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setText("Create New Entity");
        createEntityPanel.add(label1, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        createEntityPanel.add(spacer1, new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(-1, 15), new Dimension(-1, 15), 0, false));
        final Spacer spacer2 = new Spacer();
        createEntityPanel.add(spacer2, new GridConstraints(3, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Entity Name");
        createEntityPanel.add(label2, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        entityNameTextField = new JTextField();
        createEntityPanel.add(entityNameTextField, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(200, -1), new Dimension(300, -1), 0, false));
        createEntityButton = new JButton();
        createEntityButton.setText("Create Entity");
        createEntityButton.setMnemonic('C');
        createEntityButton.setDisplayedMnemonicIndex(0);
        createEntityPanel.add(createEntityButton, new GridConstraints(2, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        errorTextArea = new JTextArea();
        createEntityPanel.add(errorTextArea, new GridConstraints(4, 0, 1, 4, GridConstraints.ANCHOR_SOUTH, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 150), new Dimension(-1, 150), 0, false));
        final Spacer spacer3 = new Spacer();
        createEntityPanel.add(spacer3, new GridConstraints(2, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        cancelButton = new JButton();
        cancelButton.setText("Cancel");
        createEntityPanel.add(cancelButton, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        label2.setLabelFor(entityNameTextField);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return createEntityPanel;
    }
}
