package ${package}.jaxb.serialisation;

#foreach ($entity in $entities.entities)
import ${package}.hibernate.entities.${entity.name};
import ${package}.jaxb.types.${entity.name}Type;
#end
import org.joda.time.DateTime;
import java.util.Date;
import org.apache.commons.lang.StringUtils;
	
public class Unmarshaller
{

#foreach ($entity in $entities.entities)
	public $entity.name unmarshall(${entity.name}Type ${entity.camelCaseName}Type)
	{
		$entity.name $entity.camelCaseName = new ${entity.name}();
	
#foreach ($property in $entity.properties)
#if (${property.serialise} && !${property.complex})
#if ($property.type == "DateTime")
#set ($dateConstructor = "new DateTime(")
#set ($dateConstructorBracket = ")")
#else
#set ($dateConstructor = "")
#set ($dateConstructorBracket = "")					
#end
#if ($property.type == "String")
#set ($nullCheck = "StringUtils.isNotEmpty("+${entity.camelCaseName}+"Type."+${property.name}+")")
#elseif ($property.type == "long" || $property.type == "Long" || $property.type == "int" || $property.type == "Integer")
#set ($nullCheck = ${entity.camelCaseName}+"Type."+${property.name}+" > 0")
#else
#set ($nullCheck = ${entity.camelCaseName}+"Type."+${property.name}+" != null")
#end
		if (${nullCheck})
			${entity.camelCaseName}.${property.name} = ${dateConstructor}${entity.camelCaseName}Type.${property.name}${dateConstructorBracket};			
#end
#end			
		return ${entity.camelCaseName};
	}
#end

}
